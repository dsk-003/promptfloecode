inputs:
  chat_history:
    type: list
    default:
    - inputs:
        chat_input: Hi
      outputs:
        chat_output: Hello! How can I assist you today?
    - inputs:
        chat_input: What is Azure compute instance?
      outputs:
        chat_output: An Azure Machine Learning compute instance is a fully managed cloud-based workstation for data scientists. It provides a pre-configured and managed development environment in the cloud for machine learning. Compute instances can also be used as a compute target for training and inferencing for development and testing purposes. They have a job queue, run jobs securely in a virtual network environment, and can run multiple small jobs in parallel. Additionally, compute instances support single-node multi-GPU distributed training jobs.
    is_chat_input: false
    is_chat_history: true
  chat_input:
    type: string
    default: How can I create one using azureml sdk V2?
    is_chat_input: true
outputs:
  chat_output:
    type: string
    reference: ${chat_with_context.output}
    evaluation_only: false
    is_chat_output: true
nodes:
- name: lookup
  type: python
  source:
    type: package
    tool: promptflow_vectordb.tool.common_index_lookup.search
  inputs:
    mlindex_content: "embeddings:\n  api_base: https://webassistantazureopenai.openai.azure.com\n  api_type: Azure\n  api_version: 2023-07-01-preview\n  batch_size: '16'\n  connection:\n    id: \n      /subscriptions/f70d1881-a5f2-4c8c-8344-3e1ffde707fd/resourceGroups/RG-project-Assistant/providers/Microsoft.MachineLearningServices/workspaces/raft-assistant/connections/webassistantazureopenai\n  connection_type: workspace_connection\n  deployment: text-embedding-ada-002\n  dimension: 1536\n  file_format_version: '2'\n  kind: open_ai\n  model: text-embedding-ada-002\n  schema_version: '2'\nindex:\n  api_version: 2023-07-01-preview\n  connection:\n    id: \n      /subscriptions/f70d1881-a5f2-4c8c-8344-3e1ffde707fd/resourceGroups/RG-project-Assistant/providers/Microsoft.MachineLearningServices/workspaces/raft-assistant/connections/websitesearchserviceinstance\n  connection_type: workspace_connection\n  endpoint: https://website-search-service-instance.search.windows.net/\n  engine: azure-sdk\n  field_mapping:\n    content: content\n    embedding: contentVector\n    filename: filepath\n    metadata: meta_json_string\n    title: title\n    url: url\n  index: webindex\n  kind: acs\n  semantic_configuration_name: azureml-default\nself:\n  path: \n    azureml://subscriptions/f70d1881-a5f2-4c8c-8344-3e1ffde707fd/resourcegroups/rg-project-assistant/workspaces/raft-assistant/datastores/workspaceblobstore/paths/azureml/3960b6cd-6188-461a-816e-0e8ad100af8d/index/\n  asset_id: \n    azureml://locations/swedencentral/workspaces/f1499daf-1c6b-4c3d-94b8-88f486312c90/data/webindex/versions/1\n"
    queries: "${modify_query_with_history.output}"
    query_type: "Hybrid (vector + keyword)"
    top_k: 2
  aggregation: false
- name: generate_prompt_context
  type: python
  source:
    type: code
    path: generate_prompt_context.py
  inputs:
    search_result: "${lookup.output}"
  aggregation: false
- name: Prompt_variants
  type: prompt
  source:
    type: code
    path: Prompt_variants.jinja2
  inputs:
    contexts: "${generate_prompt_context.output}"
    chat_history: "${inputs.chat_history}"
    chat_input: "${inputs.chat_input}"
  aggregation: false
- name: chat_with_context
  type: llm
  source:
    type: code
    path: chat_with_context.jinja2
  inputs:
    deployment_name: "Raft-Assistant-gpt-4-0613"
    temperature: 0
    top_p: 1
    max_tokens: 1000
    presence_penalty: 0
    frequency_penalty: 0
    prompt_text: "${Prompt_variants.output}"
  api: chat
  provider: AzureOpenAI
  connection: webassistantazureopenai
  module: promptflow.tools.aoai
  aggregation: false
- name: modify_query_with_history
  type: llm
  source:
    type: code
    path: modify_query_with_history.jinja2
  inputs:
    deployment_name: "Raft-Assistant-gpt-4-0613"
    temperature: 0
    top_p: 1
    max_tokens: 1000
    presence_penalty: 0
    frequency_penalty: 0
    chat_history: "${inputs.chat_history}"
    chat_input: "${inputs.chat_input}"
  api: chat
  provider: AzureOpenAI
  connection: webassistantazureopenai
  module: promptflow.tools.aoai
  aggregation: false
environment:
  python_requirements_txt: requirements.txt
